-- =====================================================
-- GERİ ARAMA TALEP SİSTEMİ - TÜM SQL SORGULARI
-- =====================================================
-- Dr. Şahin Durmuş Diş Hekimi Sitesi
-- Geri arama sistemi için tüm SQL sorguları
-- =====================================================

-- =====================================================
-- 1. KURULUM SORGULARI
-- =====================================================

-- Mevcut tabloyu sil (varsa)
DROP TABLE IF EXISTS public.callback_requests CASCADE;

-- Mevcut function'ları sil (varsa)
DROP FUNCTION IF EXISTS public.handle_updated_at() CASCADE;
DROP FUNCTION IF EXISTS public.get_callback_stats() CASCADE;
DROP FUNCTION IF EXISTS public.search_callback_requests(text) CASCADE;

-- Tablo oluştur
CREATE TABLE public.callback_requests (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL CHECK (LENGTH(TRIM(name)) > 0),
    phone text NOT NULL CHECK (LENGTH(REGEXP_REPLACE(phone, '[^0-9]', '', 'g')) >= 10),
    status text DEFAULT 'pending' NOT NULL CHECK (status IN ('pending', 'called', 'completed', 'cancelled', 'scheduled')),
    priority integer DEFAULT 1 CHECK (priority BETWEEN 1 AND 5),
    source text DEFAULT 'website' CHECK (source IN ('website', 'phone', 'whatsapp', 'social', 'referral')),
    notes text,
    admin_notes text,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    called_at timestamp with time zone,
    scheduled_at timestamp with time zone,
    completed_at timestamp with time zone
);

-- Index'ler
CREATE INDEX idx_callback_requests_status ON public.callback_requests (status);
CREATE INDEX idx_callback_requests_created_at ON public.callback_requests (created_at DESC);
CREATE INDEX idx_callback_requests_priority ON public.callback_requests (priority DESC, created_at DESC);
CREATE INDEX idx_callback_requests_phone ON public.callback_requests (phone);
CREATE INDEX idx_callback_requests_source ON public.callback_requests (source);
CREATE INDEX idx_callback_requests_scheduled ON public.callback_requests (scheduled_at) WHERE scheduled_at IS NOT NULL;
CREATE INDEX idx_callback_requests_search ON public.callback_requests USING gin (to_tsvector('turkish', name || ' ' || COALESCE(notes, '')));

-- Updated at trigger function
CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS trigger
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    NEW.updated_at = timezone('utc'::text, now());
    
    -- Status değişikliklerini otomatik takip et
    IF OLD.status != NEW.status THEN
        CASE NEW.status
            WHEN 'called' THEN
                IF NEW.called_at IS NULL THEN
                    NEW.called_at = timezone('utc'::text, now());
                END IF;
            WHEN 'completed' THEN
                IF NEW.completed_at IS NULL THEN
                    NEW.completed_at = timezone('utc'::text, now());
                END IF;
        END CASE;
    END IF;
    
    RETURN NEW;
END;
$$;

-- Trigger oluştur
CREATE TRIGGER handle_callback_requests_updated_at
    BEFORE UPDATE ON public.callback_requests
    FOR EACH ROW
    EXECUTE FUNCTION public.handle_updated_at();

-- İstatistik function'ı
CREATE OR REPLACE FUNCTION public.get_callback_stats()
RETURNS json
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
    result json;
    avg_hours numeric;
BEGIN
    -- Ortalama yanıt süresini ayrı hesapla
    SELECT ROUND(AVG(EXTRACT(EPOCH FROM (called_at - created_at))/3600)::numeric, 2)
    INTO avg_hours
    FROM public.callback_requests
    WHERE called_at IS NOT NULL;
    
    SELECT json_build_object(
        'total', COUNT(*),
        'pending', COUNT(*) FILTER (WHERE status = 'pending'),
        'called', COUNT(*) FILTER (WHERE status = 'called'),
        'completed', COUNT(*) FILTER (WHERE status = 'completed'),
        'cancelled', COUNT(*) FILTER (WHERE status = 'cancelled'),
        'scheduled', COUNT(*) FILTER (WHERE status = 'scheduled'),
        'today_total', COUNT(*) FILTER (WHERE DATE(created_at) = CURRENT_DATE),
        'today_pending', COUNT(*) FILTER (WHERE DATE(created_at) = CURRENT_DATE AND status = 'pending'),
        'high_priority', COUNT(*) FILTER (WHERE priority >= 4 AND status IN ('pending', 'scheduled')),
        'avg_response_hours', COALESCE(avg_hours, 0)
    )
    INTO result
    FROM public.callback_requests;
    
    RETURN result;
END;
$$;

-- Arama function'ı
CREATE OR REPLACE FUNCTION public.search_callback_requests(search_term text)
RETURNS TABLE (
    id bigint,
    name text,
    phone text,
    status text,
    priority integer,
    source text,
    notes text,
    admin_notes text,
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    called_at timestamp with time zone,
    scheduled_at timestamp with time zone,
    completed_at timestamp with time zone,
    rank real
)
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    RETURN QUERY
    SELECT 
        cr.id,
        cr.name,
        cr.phone,
        cr.status,
        cr.priority,
        cr.source,
        cr.notes,
        cr.admin_notes,
        cr.created_at,
        cr.updated_at,
        cr.called_at,
        cr.scheduled_at,
        cr.completed_at,
        ts_rank(to_tsvector('turkish', cr.name || ' ' || COALESCE(cr.notes, '')), plainto_tsquery('turkish', search_term)) as rank
    FROM public.callback_requests cr
    WHERE 
        to_tsvector('turkish', cr.name || ' ' || COALESCE(cr.notes, '')) @@ plainto_tsquery('turkish', search_term)
        OR cr.phone LIKE '%' || search_term || '%'
    ORDER BY rank DESC, cr.created_at DESC;
END;
$$;

-- Güvenlik politikaları
ALTER TABLE public.callback_requests ENABLE ROW LEVEL SECURITY;

CREATE POLICY "authenticated_full_access"
ON public.callback_requests
FOR ALL
TO authenticated
USING (true)
WITH CHECK (true);

CREATE POLICY "anonymous_insert_only"
ON public.callback_requests
FOR INSERT
TO anon
WITH CHECK (true);

-- =====================================================
-- 2. TEMEL CRUD SORGULARI
-- =====================================================

-- Yeni talep ekleme
INSERT INTO public.callback_requests (name, phone, priority, source, notes)
VALUES ('Ahmet Yılmaz', '0532 123 45 67', 2, 'website', 'Diş ağrısı var')
RETURNING *;

-- Tek talep getirme
SELECT * FROM public.callback_requests WHERE id = 1;

-- Tüm talepleri listeleme
SELECT * FROM public.callback_requests ORDER BY created_at DESC;

-- Talep güncelleme
UPDATE public.callback_requests 
SET 
    status = 'called',
    admin_notes = 'Hasta ile görüşüldü'
WHERE id = 1
RETURNING *;

-- Talep silme
DELETE FROM public.callback_requests WHERE id = 1 RETURNING *;

-- =====================================================
-- 3. FİLTRELEME SORGULARI
-- =====================================================

-- Duruma göre filtreleme
SELECT * FROM public.callback_requests 
WHERE status = 'pending' 
ORDER BY priority DESC, created_at DESC;

-- Önceliğe göre filtreleme
SELECT * FROM public.callback_requests 
WHERE priority >= 4 
ORDER BY priority DESC, created_at DESC;

-- Kaynağa göre filtreleme
SELECT * FROM public.callback_requests 
WHERE source = 'website' 
ORDER BY created_at DESC;

-- Tarih aralığında filtreleme
SELECT * FROM public.callback_requests 
WHERE created_at >= '2024-01-01' AND created_at <= '2024-12-31'
ORDER BY created_at DESC;

-- Bugünkü talepler
SELECT * FROM public.callback_requests 
WHERE DATE(created_at) = CURRENT_DATE
ORDER BY priority DESC, created_at DESC;

-- Bu haftaki talepler
SELECT * FROM public.callback_requests 
WHERE created_at >= DATE_TRUNC('week', CURRENT_DATE)
ORDER BY created_at DESC;

-- Bu ayki talepler
SELECT * FROM public.callback_requests 
WHERE created_at >= DATE_TRUNC('month', CURRENT_DATE)
ORDER BY created_at DESC;

-- Bekleyen acil talepler
SELECT * FROM public.callback_requests 
WHERE status = 'pending' AND priority >= 4
ORDER BY priority DESC, created_at ASC;

-- Uzun süre bekleyen talepler (24 saatten fazla)
SELECT * FROM public.callback_requests 
WHERE status = 'pending' 
AND created_at < CURRENT_TIMESTAMP - INTERVAL '24 hours'
ORDER BY created_at ASC;

-- =====================================================
-- 4. ARAMA SORGULARI
-- =====================================================

-- İsim ile arama
SELECT * FROM public.callback_requests 
WHERE LOWER(name) LIKE LOWER('%ahmet%')
ORDER BY created_at DESC;

-- Telefon ile arama
SELECT * FROM public.callback_requests 
WHERE phone LIKE '%532%'
ORDER BY created_at DESC;

-- Notlarda arama
SELECT * FROM public.callback_requests 
WHERE LOWER(notes) LIKE LOWER('%ağrı%')
ORDER BY created_at DESC;

-- Full-text arama (Türkçe)
SELECT * FROM public.search_callback_requests('diş ağrısı');

-- Gelişmiş arama (isim, telefon, notlar)
SELECT * FROM public.callback_requests 
WHERE 
    LOWER(name) LIKE LOWER('%ahmet%') 
    OR phone LIKE '%532%'
    OR LOWER(COALESCE(notes, '')) LIKE LOWER('%ağrı%')
ORDER BY created_at DESC;

-- =====================================================
-- 5. İSTATİSTİK SORGULARI
-- =====================================================

-- Genel istatistikler
SELECT public.get_callback_stats();

-- Durum bazında sayılar
SELECT 
    status,
    COUNT(*) as toplam,
    COUNT(*) * 100.0 / SUM(COUNT(*)) OVER() as yuzde
FROM public.callback_requests 
GROUP BY status
ORDER BY toplam DESC;

-- Öncelik bazında sayılar
SELECT 
    priority,
    CASE priority
        WHEN 1 THEN 'Normal'
        WHEN 2 THEN 'Önemli'
        WHEN 3 THEN 'Yüksek'
        WHEN 4 THEN 'Acil'
        WHEN 5 THEN 'Kritik'
    END as oncelik_adi,
    COUNT(*) as toplam
FROM public.callback_requests 
GROUP BY priority
ORDER BY priority DESC;

-- Kaynak bazında sayılar
SELECT 
    source,
    COUNT(*) as toplam,
    COUNT(*) * 100.0 / SUM(COUNT(*)) OVER() as yuzde
FROM public.callback_requests 
GROUP BY source
ORDER BY toplam DESC;

-- Günlük istatistikler (son 30 gün)
SELECT 
    DATE(created_at) as tarih,
    COUNT(*) as toplam_talep,
    COUNT(*) FILTER (WHERE status = 'pending') as bekleyen,
    COUNT(*) FILTER (WHERE status = 'called') as aranan,
    COUNT(*) FILTER (WHERE status = 'completed') as tamamlanan,
    COUNT(*) FILTER (WHERE priority >= 4) as yuksek_oncelik
FROM public.callback_requests
WHERE created_at >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY DATE(created_at)
ORDER BY tarih DESC;

-- Haftalık performans
SELECT 
    DATE_TRUNC('week', created_at)::date as hafta_baslangici,
    COUNT(*) as gelen_talep,
    COUNT(*) FILTER (WHERE status IN ('called', 'completed')) as islenen_talep,
    ROUND(
        (COUNT(*) FILTER (WHERE status IN ('called', 'completed')) * 100.0) / 
        NULLIF(COUNT(*), 0), 
        2
    ) as basari_orani_yuzde
FROM public.callback_requests
WHERE created_at >= CURRENT_DATE - INTERVAL '8 weeks'
GROUP BY DATE_TRUNC('week', created_at)
ORDER BY hafta_baslangici DESC;

-- Saatlik dağılım
SELECT 
    EXTRACT(HOUR FROM created_at) as saat,
    COUNT(*) as talep_sayisi
FROM public.callback_requests
GROUP BY EXTRACT(HOUR FROM created_at)
ORDER BY saat;

-- Yanıt süresi istatistikleri
SELECT 
    COUNT(*) FILTER (WHERE called_at IS NOT NULL) as cevaplanan_talep,
    ROUND(AVG(EXTRACT(EPOCH FROM (called_at - created_at))/3600)::numeric, 2) as ortalama_yanit_saati,
    ROUND(MIN(EXTRACT(EPOCH FROM (called_at - created_at))/3600)::numeric, 2) as en_hizli_yanit_saati,
    ROUND(MAX(EXTRACT(EPOCH FROM (called_at - created_at))/3600)::numeric, 2) as en_yavas_yanit_saati,
    ROUND(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY EXTRACT(EPOCH FROM (called_at - created_at))/3600)::numeric, 2) as medyan_yanit_saati
FROM public.callback_requests
WHERE called_at IS NOT NULL;

-- =====================================================
-- 6. RAPORLAMA SORGULARI
-- =====================================================

-- Günlük özet raporu
SELECT 
    CURRENT_DATE as rapor_tarihi,
    COUNT(*) as toplam_talep,
    COUNT(*) FILTER (WHERE DATE(created_at) = CURRENT_DATE) as bugun_gelen,
    COUNT(*) FILTER (WHERE status = 'pending') as bekleyen,
    COUNT(*) FILTER (WHERE status = 'pending' AND priority >= 4) as acil_bekleyen,
    COUNT(*) FILTER (WHERE status = 'called' AND DATE(called_at) = CURRENT_DATE) as bugun_aranan,
    COUNT(*) FILTER (WHERE status = 'completed' AND DATE(completed_at) = CURRENT_DATE) as bugun_tamamlanan
FROM public.callback_requests;

-- Haftalık performans raporu
SELECT 
    DATE_TRUNC('week', CURRENT_DATE)::date as hafta_baslangici,
    COUNT(*) FILTER (WHERE created_at >= DATE_TRUNC('week', CURRENT_DATE)) as bu_hafta_gelen,
    COUNT(*) FILTER (WHERE called_at >= DATE_TRUNC('week', CURRENT_DATE)) as bu_hafta_aranan,
    COUNT(*) FILTER (WHERE completed_at >= DATE_TRUNC('week', CURRENT_DATE)) as bu_hafta_tamamlanan,
    ROUND(
        COUNT(*) FILTER (WHERE completed_at >= DATE_TRUNC('week', CURRENT_DATE)) * 100.0 / 
        NULLIF(COUNT(*) FILTER (WHERE created_at >= DATE_TRUNC('week', CURRENT_DATE)), 0),
        2
    ) as tamamlanma_orani
FROM public.callback_requests;

-- En aktif saatler
SELECT 
    EXTRACT(HOUR FROM created_at) as saat,
    COUNT(*) as talep_sayisi,
    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as yuzde
FROM public.callback_requests
WHERE created_at >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY EXTRACT(HOUR FROM created_at)
ORDER BY talep_sayisi DESC
LIMIT 5;

-- En çok talep gelen kaynaklar
SELECT 
    source,
    CASE source
        WHEN 'website' THEN 'Website'
        WHEN 'phone' THEN 'Telefon'
        WHEN 'whatsapp' THEN 'WhatsApp'
        WHEN 'social' THEN 'Sosyal Medya'
        WHEN 'referral' THEN 'Tavsiye'
    END as kaynak_adi,
    COUNT(*) as talep_sayisi,
    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as yuzde
FROM public.callback_requests
WHERE created_at >= CURRENT_DATE - INTERVAL '30 days'
GROUP BY source
ORDER BY talep_sayisi DESC;

-- =====================================================
-- 7. BAKIM VE TEMİZLİK SORGULARI
-- =====================================================

-- Eski tamamlanan talepleri sil (90 günden eski)
DELETE FROM public.callback_requests 
WHERE status = 'completed' 
AND completed_at < CURRENT_TIMESTAMP - INTERVAL '90 days';

-- Eski iptal edilen talepleri sil (30 günden eski)
DELETE FROM public.callback_requests 
WHERE status = 'cancelled' 
AND updated_at < CURRENT_TIMESTAMP - INTERVAL '30 days';

-- Test verilerini temizle
DELETE FROM public.callback_requests 
WHERE 
    LOWER(name) LIKE '%test%' 
    OR LOWER(name) LIKE '%deneme%'
    OR phone LIKE '%000%'
    OR phone = '0000000000'
    OR name = 'Test User'
    OR name = 'Test Kullanıcı';

-- Geçersiz kayıtları temizle
DELETE FROM public.callback_requests 
WHERE 
    TRIM(name) = '' 
    OR name IS NULL 
    OR TRIM(phone) = '' 
    OR phone IS NULL
    OR LENGTH(REGEXP_REPLACE(phone, '[^0-9]', '', 'g')) < 10;

-- Duplicate telefon numaralarını bul
SELECT 
    phone,
    COUNT(*) as tekrar_sayisi,
    array_agg(id ORDER BY created_at) as id_listesi,
    array_agg(name ORDER BY created_at) as isim_listesi,
    MIN(created_at) as ilk_talep,
    MAX(created_at) as son_talep
FROM public.callback_requests
GROUP BY phone
HAVING COUNT(*) > 1
ORDER BY COUNT(*) DESC, phone;

-- Geçersiz telefon numaralarını bul
SELECT 
    id, 
    name, 
    phone,
    LENGTH(REGEXP_REPLACE(phone, '[^0-9]', '', 'g')) as rakam_sayisi,
    created_at
FROM public.callback_requests
WHERE 
    LENGTH(REGEXP_REPLACE(phone, '[^0-9]', '', 'g')) < 10
    OR LENGTH(REGEXP_REPLACE(phone, '[^0-9]', '', 'g')) > 11
ORDER BY created_at DESC;

-- =====================================================
-- 8. YEDEKLEME SORGULARI
-- =====================================================

-- Yedek tablo oluştur
CREATE TABLE public.callback_requests_backup AS 
SELECT * FROM public.callback_requests
WHERE created_at < CURRENT_TIMESTAMP - INTERVAL '90 days';

-- Yedeklenen kayıt sayısını kontrol et
SELECT 
    COUNT(*) as yedeklenen_kayit,
    MIN(created_at) as en_eski_tarih,
    MAX(created_at) as en_yeni_tarih
FROM public.callback_requests_backup;

-- Tablo boyut bilgisi
SELECT 
    t.table_name,
    t.table_schema,
    pg_size_pretty(pg_total_relation_size(c.oid)) as table_size,
    pg_size_pretty(pg_relation_size(c.oid)) as data_size
FROM information_schema.tables t
JOIN pg_class c ON c.relname = t.table_name
WHERE t.table_name = 'callback_requests' 
AND t.table_schema = 'public';

-- =====================================================
-- 9. SAYFALAMA SORGULARI
-- =====================================================

-- Sayfalama ile listeleme (sayfa 1, 20 kayıt)
SELECT * FROM public.callback_requests 
ORDER BY created_at DESC 
LIMIT 20 OFFSET 0;

-- Sayfalama ile listeleme (sayfa 2, 20 kayıt)
SELECT * FROM public.callback_requests 
ORDER BY created_at DESC 
LIMIT 20 OFFSET 20;

-- Toplam sayfa sayısını hesapla
SELECT 
    COUNT(*) as toplam_kayit,
    CEIL(COUNT(*) / 20.0) as toplam_sayfa
FROM public.callback_requests;

-- Filtreleme ile sayfalama
SELECT * FROM public.callback_requests 
WHERE status = 'pending'
ORDER BY priority DESC, created_at DESC
LIMIT 20 OFFSET 0;

-- =====================================================
-- 10. BULK İŞLEMLER
-- =====================================================

-- Toplu durum güncelleme
UPDATE public.callback_requests 
SET status = 'cancelled', admin_notes = 'Toplu iptal'
WHERE status = 'pending' 
AND created_at < CURRENT_TIMESTAMP - INTERVAL '7 days';

-- Toplu öncelik güncelleme
UPDATE public.callback_requests 
SET priority = 4
WHERE status = 'pending' 
AND created_at < CURRENT_TIMESTAMP - INTERVAL '24 hours';

-- Toplu test verisi ekleme
INSERT INTO public.callback_requests (name, phone, status, priority, source, notes) VALUES 
('Ahmet Yılmaz', '0532 123 45 67', 'pending', 2, 'website', 'Diş ağrısı var'),
('Ayşe Demir', '0533 987 65 43', 'called', 3, 'phone', 'Randevu alındı'),
('Mehmet Kaya', '0534 555 44 33', 'completed', 1, 'website', 'Tedavi tamamlandı'),
('Fatma Özkan', '0535 111 22 33', 'pending', 4, 'whatsapp', 'Acil durum - ağrı'),
('Ali Çelik', '0536 777 88 99', 'cancelled', 1, 'website', 'İptal edildi'),
('Zeynep Aksoy', '0537 444 55 66', 'scheduled', 3, 'social', 'Yarın 14:00 randevu'),
('Mustafa Erdoğan', '0538 222 33 44', 'pending', 5, 'referral', 'Kritik - kırık diş');

-- =====================================================
-- 11. KONTROL VE DOĞRULAMA SORGULARI
-- =====================================================

-- Tablo yapısını kontrol et
SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns 
WHERE table_name = 'callback_requests' 
AND table_schema = 'public'
ORDER BY ordinal_position;

-- Index'leri kontrol et
SELECT 
    indexname,
    indexdef
FROM pg_indexes 
WHERE tablename = 'callback_requests' 
AND schemaname = 'public';

-- Constraint'leri kontrol et
SELECT 
    constraint_name,
    constraint_type
FROM information_schema.table_constraints 
WHERE table_name = 'callback_requests' 
AND table_schema = 'public';

-- Function'ları kontrol et
SELECT 
    routine_name,
    routine_type,
    data_type
FROM information_schema.routines 
WHERE routine_schema = 'public' 
AND routine_name LIKE '%callback%';

-- Trigger'ları kontrol et
SELECT 
    trigger_name,
    event_manipulation,
    action_timing
FROM information_schema.triggers 
WHERE event_object_table = 'callback_requests';

-- =====================================================
-- 12. PERFORMANS SORGULARI
-- =====================================================

-- En yavaş sorgular için EXPLAIN ANALYZE örnekleri
EXPLAIN ANALYZE SELECT * FROM public.callback_requests 
WHERE status = 'pending' 
ORDER BY priority DESC, created_at DESC;

EXPLAIN ANALYZE SELECT * FROM public.search_callback_requests('diş ağrısı');

EXPLAIN ANALYZE SELECT * FROM public.callback_requests 
WHERE created_at >= CURRENT_DATE - INTERVAL '30 days'
ORDER BY created_at DESC;

-- Index kullanım istatistikleri
SELECT 
    schemaname,
    tablename,
    indexname,
    idx_scan,
    idx_tup_read,
    idx_tup_fetch
FROM pg_stat_user_indexes 
WHERE tablename = 'callback_requests';

-- Tablo istatistikleri
SELECT 
    n_tup_ins as toplam_insert,
    n_tup_upd as toplam_update,
    n_tup_del as toplam_delete,
    n_live_tup as aktif_kayit,
    n_dead_tup as silinen_kayit,
    last_vacuum,
    last_autovacuum,
    last_analyze,
    last_autoanalyze
FROM pg_stat_user_tables 
WHERE relname = 'callback_requests';

-- =====================================================
-- DOSYA SONU - TÜM SORGULAR TAMAMLANDI
-- ===================================================== 