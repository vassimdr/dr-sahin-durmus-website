-- =====================================================
-- GERİ ARAMA TALEP SİSTEMİ - DİNAMİK SQL KURULUM
-- =====================================================
-- Dr. Şahin Durmuş Diş Hekimi Sitesi
-- Dinamik ve esnek geri arama sistemi
-- =====================================================

-- Güvenli ve dinamik temizlik
DO $$
DECLARE
    r RECORD;
BEGIN
    -- Mevcut politikaları dinamik olarak sil
    FOR r IN (SELECT policyname FROM pg_policies WHERE tablename = 'callback_requests' AND schemaname = 'public')
    LOOP
        EXECUTE 'DROP POLICY IF EXISTS ' || quote_ident(r.policyname) || ' ON public.callback_requests';
    END LOOP;
    
    -- Mevcut trigger'ları dinamik olarak sil
    FOR r IN (SELECT tgname FROM pg_trigger WHERE tgrelid = 'public.callback_requests'::regclass)
    LOOP
        EXECUTE 'DROP TRIGGER IF EXISTS ' || quote_ident(r.tgname) || ' ON public.callback_requests';
    END LOOP;
    
    -- Function'ları sil
    DROP FUNCTION IF EXISTS public.handle_updated_at() CASCADE;
    DROP FUNCTION IF EXISTS public.get_callback_stats() CASCADE;
    DROP FUNCTION IF EXISTS public.search_callback_requests(text) CASCADE;
    
    -- Tabloyu sil
    DROP TABLE IF EXISTS public.callback_requests CASCADE;
    
EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE 'Temizlik sırasında hata: %', SQLERRM;
END $$;

-- =====================================================
-- DİNAMİK TABLO OLUŞTURMA
-- =====================================================

CREATE TABLE public.callback_requests (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL,
    phone text NOT NULL,
    status text DEFAULT 'pending' NOT NULL,
    priority integer DEFAULT 1 CHECK (priority BETWEEN 1 AND 5),
    notes text,
    admin_notes text,
    source text DEFAULT 'website',
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    called_at timestamp with time zone,
    scheduled_at timestamp with time zone,
    completed_at timestamp with time zone,
    
    -- Dinamik constraint'ler
    CONSTRAINT callback_requests_name_check CHECK (LENGTH(TRIM(name)) > 0),
    CONSTRAINT callback_requests_phone_check CHECK (LENGTH(REGEXP_REPLACE(phone, '[^0-9]', '', 'g')) >= 10),
    CONSTRAINT callback_requests_status_check CHECK (status IN ('pending', 'called', 'completed', 'cancelled', 'scheduled')),
    CONSTRAINT callback_requests_source_check CHECK (source IN ('website', 'phone', 'whatsapp', 'social', 'referral'))
);

-- Tablo yorumları
COMMENT ON TABLE public.callback_requests IS 'Geri arama talepleri - dinamik yönetim sistemi';
COMMENT ON COLUMN public.callback_requests.priority IS '1=Düşük, 2=Normal, 3=Yüksek, 4=Acil, 5=Kritik';
COMMENT ON COLUMN public.callback_requests.source IS 'Talebin geldiği kaynak';

-- =====================================================
-- DİNAMİK INDEX'LER
-- =====================================================

CREATE INDEX idx_callback_requests_status ON public.callback_requests (status);
CREATE INDEX idx_callback_requests_created_at ON public.callback_requests (created_at DESC);
CREATE INDEX idx_callback_requests_priority ON public.callback_requests (priority DESC, created_at DESC);
CREATE INDEX idx_callback_requests_phone ON public.callback_requests (phone);
CREATE INDEX idx_callback_requests_source ON public.callback_requests (source);
CREATE INDEX idx_callback_requests_scheduled ON public.callback_requests (scheduled_at) WHERE scheduled_at IS NOT NULL;

-- Arama için composite index
CREATE INDEX idx_callback_requests_search ON public.callback_requests 
USING gin (to_tsvector('turkish', name || ' ' || COALESCE(notes, '')));

-- =====================================================
-- DİNAMİK FUNCTION'LAR
-- =====================================================

-- Updated at trigger function
CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS trigger
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    NEW.updated_at = timezone('utc'::text, now());
    
    -- Status değişikliklerini otomatik takip et
    IF OLD.status != NEW.status THEN
        CASE NEW.status
            WHEN 'called' THEN
                IF NEW.called_at IS NULL THEN
                    NEW.called_at = timezone('utc'::text, now());
                END IF;
            WHEN 'completed' THEN
                IF NEW.completed_at IS NULL THEN
                    NEW.completed_at = timezone('utc'::text, now());
                END IF;
        END CASE;
    END IF;
    
    RETURN NEW;
END;
$$;

-- İstatistik function'ı
CREATE OR REPLACE FUNCTION public.get_callback_stats()
RETURNS json
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
    result json;
    avg_hours numeric;
BEGIN
    -- Ortalama yanıt süresini ayrı hesapla
    SELECT ROUND(AVG(EXTRACT(EPOCH FROM (called_at - created_at))/3600)::numeric, 2)
    INTO avg_hours
    FROM public.callback_requests
    WHERE called_at IS NOT NULL;
    
    SELECT json_build_object(
        'total', COUNT(*),
        'pending', COUNT(*) FILTER (WHERE status = 'pending'),
        'called', COUNT(*) FILTER (WHERE status = 'called'),
        'completed', COUNT(*) FILTER (WHERE status = 'completed'),
        'cancelled', COUNT(*) FILTER (WHERE status = 'cancelled'),
        'scheduled', COUNT(*) FILTER (WHERE status = 'scheduled'),
        'today_total', COUNT(*) FILTER (WHERE DATE(created_at) = CURRENT_DATE),
        'today_pending', COUNT(*) FILTER (WHERE DATE(created_at) = CURRENT_DATE AND status = 'pending'),
        'high_priority', COUNT(*) FILTER (WHERE priority >= 4 AND status IN ('pending', 'scheduled')),
        'avg_response_hours', COALESCE(avg_hours, 0)
    )
    INTO result
    FROM public.callback_requests;
    
    RETURN result;
END;
$$;

-- Arama function'ı
CREATE OR REPLACE FUNCTION public.search_callback_requests(search_term text)
RETURNS TABLE (
    id bigint,
    name text,
    phone text,
    status text,
    priority integer,
    created_at timestamp with time zone,
    rank real
)
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
    RETURN QUERY
    SELECT 
        cr.id,
        cr.name,
        cr.phone,
        cr.status,
        cr.priority,
        cr.created_at,
        ts_rank(to_tsvector('turkish', cr.name || ' ' || COALESCE(cr.notes, '')), plainto_tsquery('turkish', search_term)) as rank
    FROM public.callback_requests cr
    WHERE 
        to_tsvector('turkish', cr.name || ' ' || COALESCE(cr.notes, '')) @@ plainto_tsquery('turkish', search_term)
        OR cr.phone LIKE '%' || search_term || '%'
    ORDER BY rank DESC, cr.created_at DESC;
END;
$$;

-- =====================================================
-- TRIGGER'LAR
-- =====================================================

CREATE TRIGGER handle_callback_requests_updated_at
    BEFORE UPDATE ON public.callback_requests
    FOR EACH ROW
    EXECUTE FUNCTION public.handle_updated_at();

-- =====================================================
-- GÜVENLİK POLİTİKALARI
-- =====================================================

ALTER TABLE public.callback_requests ENABLE ROW LEVEL SECURITY;

CREATE POLICY "authenticated_full_access"
ON public.callback_requests
FOR ALL
TO authenticated
USING (true)
WITH CHECK (true);

CREATE POLICY "anonymous_insert_only"
ON public.callback_requests
FOR INSERT
TO anon
WITH CHECK (true);

-- =====================================================
-- DİNAMİK TEST VERİLERİ
-- =====================================================

INSERT INTO public.callback_requests (name, phone, status, priority, notes, source) VALUES 
('Ahmet Yılmaz', '0532 123 45 67', 'pending', 2, 'Diş ağrısı var', 'website'),
('Ayşe Demir', '0533 987 65 43', 'called', 3, 'Randevu alındı', 'phone'),
('Mehmet Kaya', '0534 555 44 33', 'completed', 1, 'Tedavi tamamlandı', 'website'),
('Fatma Özkan', '0535 111 22 33', 'pending', 4, 'Acil durum - ağrı', 'whatsapp'),
('Ali Çelik', '0536 777 88 99', 'cancelled', 1, 'İptal edildi', 'website'),
('Zeynep Aksoy', '0537 444 55 66', 'scheduled', 3, 'Yarın 14:00 randevu', 'social'),
('Mustafa Erdoğan', '0538 222 33 44', 'pending', 5, 'Kritik - kırık diş', 'referral');

-- =====================================================
-- KURULUM TAMAMLANDI
-- =====================================================

-- Kurulum kontrolü
DO $$
BEGIN
    RAISE NOTICE 'Geri arama sistemi başarıyla kuruldu!';
    RAISE NOTICE 'Toplam kayıt: %', (SELECT COUNT(*) FROM public.callback_requests);
    RAISE NOTICE 'İstatistikler: %', (SELECT public.get_callback_stats());
END $$; 